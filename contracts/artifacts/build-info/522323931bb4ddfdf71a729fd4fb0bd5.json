{
	"id": "522323931bb4ddfdf71a729fd4fb0bd5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/8_bucles_condicionales.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ncontract loops_conditionals {\r\n    \r\n    // Suma de los primeros 10 primeros numeros a partir de un numero introducido\r\n    function sum(uint _number) public pure returns (uint){\r\n        uint aux_sum = 0;\r\n\r\n    //Bucle for\r\n\r\n        for (uint i = _number; i < (10 + _number); i++){\r\n        aux_sum = aux_sum + i;\r\n        }\r\n\r\n        return aux_sum;\r\n    }\r\n\r\n  // Suma de los 10 primeros numeros impares\r\n    function odd() public pure returns (uint){\r\n       uint aux_sum = 0;\r\n       uint counter = 0;\r\n       uint counter_odd = 0;\r\n       \r\n       while(counter_odd < 10){\r\n\r\n\r\n           if(counter % 2 != 0){\r\n               aux_sum = aux_sum + counter;\r\n               counter_odd++;\r\n           }\r\n\r\n           counter++;\r\n       }\r\n\r\n       return aux_sum;\r\n     }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/8_bucles_condicionales.sol": {
				"loops_conditionals": {
					"abi": [
						{
							"inputs": [],
							"name": "odd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								}
							],
							"name": "sum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/8_bucles_condicionales.sol\":60:841  contract loops_conditionals {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/8_bucles_condicionales.sol\":60:841  contract loops_conditionals {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x188b85b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc12363a2\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/8_bucles_condicionales.sol\":184:421  function sum(uint _number) public pure returns (uint){\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/8_bucles_condicionales.sol\":475:838  function odd() public pure returns (uint){\r... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/8_bucles_condicionales.sol\":184:421  function sum(uint _number) public pure returns (uint){\r... */\n    tag_8:\n        /* \"contracts/8_bucles_condicionales.sol\":232:236  uint */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":248:260  uint aux_sum */\n      dup1\n        /* \"contracts/8_bucles_condicionales.sol\":263:264  0 */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":248:264  uint aux_sum = 0 */\n      swap1\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":301:307  uint i */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":310:317  _number */\n      dup4\n        /* \"contracts/8_bucles_condicionales.sol\":301:317  uint i = _number */\n      swap1\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":296:387  for (uint i = _number; i < (10 + _number); i++){\r... */\n    tag_15:\n        /* \"contracts/8_bucles_condicionales.sol\":329:336  _number */\n      dup4\n        /* \"contracts/8_bucles_condicionales.sol\":324:326  10 */\n      0x0a\n        /* \"contracts/8_bucles_condicionales.sol\":324:336  10 + _number */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/8_bucles_condicionales.sol\":319:320  i */\n      dup2\n        /* \"contracts/8_bucles_condicionales.sol\":319:337  i < (10 + _number) */\n      lt\n        /* \"contracts/8_bucles_condicionales.sol\":296:387  for (uint i = _number; i < (10 + _number); i++){\r... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/8_bucles_condicionales.sol\":374:375  i */\n      dup1\n        /* \"contracts/8_bucles_condicionales.sol\":364:371  aux_sum */\n      dup3\n        /* \"contracts/8_bucles_condicionales.sol\":364:375  aux_sum + i */\n      tag_20\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_20:\n        /* \"contracts/8_bucles_condicionales.sol\":354:375  aux_sum = aux_sum + i */\n      swap2\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":339:342  i++ */\n      dup1\n      dup1\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":296:387  for (uint i = _number; i < (10 + _number); i++){\r... */\n      jump(tag_15)\n    tag_16:\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":406:413  aux_sum */\n      dup1\n        /* \"contracts/8_bucles_condicionales.sol\":399:413  return aux_sum */\n      swap2\n      pop\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":184:421  function sum(uint _number) public pure returns (uint){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/8_bucles_condicionales.sol\":475:838  function odd() public pure returns (uint){\r... */\n    tag_12:\n        /* \"contracts/8_bucles_condicionales.sol\":511:515  uint */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":526:538  uint aux_sum */\n      dup1\n        /* \"contracts/8_bucles_condicionales.sol\":541:542  0 */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":526:542  uint aux_sum = 0 */\n      swap1\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":552:564  uint counter */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":578:594  uint counter_odd */\n      dup1\n        /* \"contracts/8_bucles_condicionales.sol\":617:804  while(counter_odd < 10){\r... */\n    tag_24:\n        /* \"contracts/8_bucles_condicionales.sol\":637:639  10 */\n      0x0a\n        /* \"contracts/8_bucles_condicionales.sol\":623:634  counter_odd */\n      dup2\n        /* \"contracts/8_bucles_condicionales.sol\":623:639  counter_odd < 10 */\n      lt\n        /* \"contracts/8_bucles_condicionales.sol\":617:804  while(counter_odd < 10){\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/8_bucles_condicionales.sol\":676:677  0 */\n      0x00\n        /* \"contracts/8_bucles_condicionales.sol\":671:672  2 */\n      0x02\n        /* \"contracts/8_bucles_condicionales.sol\":661:668  counter */\n      dup4\n        /* \"contracts/8_bucles_condicionales.sol\":661:672  counter % 2 */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"contracts/8_bucles_condicionales.sol\":661:677  counter % 2 != 0 */\n      eq\n        /* \"contracts/8_bucles_condicionales.sol\":658:769  if(counter % 2 != 0){\r... */\n      tag_28\n      jumpi\n        /* \"contracts/8_bucles_condicionales.sol\":716:723  counter */\n      dup2\n        /* \"contracts/8_bucles_condicionales.sol\":706:713  aux_sum */\n      dup4\n        /* \"contracts/8_bucles_condicionales.sol\":706:723  aux_sum + counter */\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n        /* \"contracts/8_bucles_condicionales.sol\":696:723  aux_sum = aux_sum + counter */\n      swap3\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":741:754  counter_odd++ */\n      dup1\n      dup1\n      tag_30\n      swap1\n      tag_22\n      jump\t// in\n    tag_30:\n      swap2\n      pop\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":658:769  if(counter % 2 != 0){\r... */\n    tag_28:\n        /* \"contracts/8_bucles_condicionales.sol\":784:793  counter++ */\n      dup2\n      dup1\n      tag_31\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      swap3\n      pop\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":617:804  while(counter_odd < 10){\r... */\n      jump(tag_24)\n    tag_25:\n        /* \"contracts/8_bucles_condicionales.sol\":822:829  aux_sum */\n      dup3\n        /* \"contracts/8_bucles_condicionales.sol\":815:829  return aux_sum */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/8_bucles_condicionales.sol\":475:838  function odd() public pure returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_33:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_35\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_7:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":228:347   */\n    tag_38:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_41\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_33\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_42:\n        /* \"#utility.yul\":574:598   */\n      tag_44\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_10:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_47\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_42\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1225   */\n    tag_19:\n        /* \"#utility.yul\":960:963   */\n      0x00\n        /* \"#utility.yul\":979:999   */\n      tag_51\n        /* \"#utility.yul\":997:998   */\n      dup3\n        /* \"#utility.yul\":979:999   */\n      tag_45\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":974:999   */\n      swap2\n      pop\n        /* \"#utility.yul\":1013:1033   */\n      tag_52\n        /* \"#utility.yul\":1031:1032   */\n      dup4\n        /* \"#utility.yul\":1013:1033   */\n      tag_45\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1008:1033   */\n      swap3\n      pop\n        /* \"#utility.yul\":1167:1168   */\n      dup3\n        /* \"#utility.yul\":1099:1165   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1169   */\n      sub\n        /* \"#utility.yul\":1092:1093   */\n      dup3\n        /* \"#utility.yul\":1089:1170   */\n      gt\n        /* \"#utility.yul\":1086:1193   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1173:1191   */\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1086:1193   */\n    tag_53:\n        /* \"#utility.yul\":1217:1218   */\n      dup3\n        /* \"#utility.yul\":1214:1215   */\n      dup3\n        /* \"#utility.yul\":1210:1219   */\n      add\n        /* \"#utility.yul\":1203:1219   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1308   */\n    tag_45:\n        /* \"#utility.yul\":1268:1275   */\n      0x00\n        /* \"#utility.yul\":1297:1302   */\n      dup2\n        /* \"#utility.yul\":1286:1302   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1314:1547   */\n    tag_22:\n        /* \"#utility.yul\":1353:1356   */\n      0x00\n        /* \"#utility.yul\":1376:1400   */\n      tag_58\n        /* \"#utility.yul\":1394:1399   */\n      dup3\n        /* \"#utility.yul\":1376:1400   */\n      tag_45\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1367:1400   */\n      swap2\n      pop\n        /* \"#utility.yul\":1422:1488   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1415:1420   */\n      dup3\n        /* \"#utility.yul\":1412:1489   */\n      eq\n        /* \"#utility.yul\":1409:1512   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1492:1510   */\n      tag_60\n      tag_55\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1409:1512   */\n    tag_59:\n        /* \"#utility.yul\":1539:1540   */\n      0x01\n        /* \"#utility.yul\":1532:1537   */\n      dup3\n        /* \"#utility.yul\":1528:1541   */\n      add\n        /* \"#utility.yul\":1521:1541   */\n      swap1\n      pop\n        /* \"#utility.yul\":1314:1547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1553:1729   */\n    tag_27:\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1602:1622   */\n      tag_62\n        /* \"#utility.yul\":1620:1621   */\n      dup3\n        /* \"#utility.yul\":1602:1622   */\n      tag_45\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1597:1622   */\n      swap2\n      pop\n        /* \"#utility.yul\":1636:1656   */\n      tag_63\n        /* \"#utility.yul\":1654:1655   */\n      dup4\n        /* \"#utility.yul\":1636:1656   */\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1631:1656   */\n      swap3\n      pop\n        /* \"#utility.yul\":1675:1676   */\n      dup3\n        /* \"#utility.yul\":1665:1700   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1680:1698   */\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1665:1700   */\n    tag_64:\n        /* \"#utility.yul\":1721:1722   */\n      dup3\n        /* \"#utility.yul\":1718:1719   */\n      dup3\n        /* \"#utility.yul\":1714:1723   */\n      mod\n        /* \"#utility.yul\":1709:1723   */\n      swap1\n      pop\n        /* \"#utility.yul\":1553:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1915   */\n    tag_55:\n        /* \"#utility.yul\":1783:1860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1780:1781   */\n      0x00\n        /* \"#utility.yul\":1773:1861   */\n      mstore\n        /* \"#utility.yul\":1880:1884   */\n      0x11\n        /* \"#utility.yul\":1877:1878   */\n      0x04\n        /* \"#utility.yul\":1870:1885   */\n      mstore\n        /* \"#utility.yul\":1904:1908   */\n      0x24\n        /* \"#utility.yul\":1901:1902   */\n      0x00\n        /* \"#utility.yul\":1894:1909   */\n      revert\n        /* \"#utility.yul\":1921:2101   */\n    tag_66:\n        /* \"#utility.yul\":1969:2046   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1959:2047   */\n      mstore\n        /* \"#utility.yul\":2066:2070   */\n      0x12\n        /* \"#utility.yul\":2063:2064   */\n      0x04\n        /* \"#utility.yul\":2056:2071   */\n      mstore\n        /* \"#utility.yul\":2090:2094   */\n      0x24\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2080:2095   */\n      revert\n        /* \"#utility.yul\":2230:2347   */\n    tag_40:\n        /* \"#utility.yul\":2339:2340   */\n      0x00\n        /* \"#utility.yul\":2336:2337   */\n      dup1\n        /* \"#utility.yul\":2329:2341   */\n      revert\n        /* \"#utility.yul\":2353:2475   */\n    tag_36:\n        /* \"#utility.yul\":2426:2450   */\n      tag_73\n        /* \"#utility.yul\":2444:2449   */\n      dup2\n        /* \"#utility.yul\":2426:2450   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2419:2424   */\n      dup2\n        /* \"#utility.yul\":2416:2451   */\n      eq\n        /* \"#utility.yul\":2406:2469   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":2465:2466   */\n      0x00\n        /* \"#utility.yul\":2462:2463   */\n      dup1\n        /* \"#utility.yul\":2455:2467   */\n      revert\n        /* \"#utility.yul\":2406:2469   */\n    tag_74:\n        /* \"#utility.yul\":2353:2475   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077eb62098235522b021b1120995f38825b19135d21cce71007cce0bfd20d74ea64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061032c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063c12363a21461006b575b600080fd5b6100556004803603810190610050919061014b565b610089565b6040516100629190610187565b60405180910390f35b6100736100d5565b6040516100809190610187565b60405180910390f35b6000806000905060008390505b83600a6100a391906101a2565b8110156100cb5780826100b691906101a2565b915080806100c390610202565b915050610096565b5080915050919050565b600080600090506000805b600a81101561012d5760006002836100f8919061024b565b1461011a57818361010991906101a2565b9250808061011690610202565b9150505b818061012590610202565b9250506100e0565b82935050505090565b600081359050610145816102df565b92915050565b600060208284031215610161576101606102da565b5b600061016f84828501610136565b91505092915050565b610181816101f8565b82525050565b600060208201905061019c6000830184610178565b92915050565b60006101ad826101f8565b91506101b8836101f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101ed576101ec61027c565b5b828201905092915050565b6000819050919050565b600061020d826101f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102405761023f61027c565b5b600182019050919050565b6000610256826101f8565b9150610261836101f8565b925082610271576102706102ab565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102e8816101f8565b81146102f357600080fd5b5056fea264697066735822122077eb62098235522b021b1120995f38825b19135d21cce71007cce0bfd20d74ea64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC12363A2 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP4 PUSH1 0xA PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCB JUMPI DUP1 DUP3 PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xC3 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST EQ PUSH2 0x11A JUMPI DUP2 DUP4 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x116 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP2 DUP1 PUSH2 0x125 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP POP PUSH2 0xE0 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145 DUP2 PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0x2DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F DUP5 DUP3 DUP6 ADD PUSH2 0x136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x181 DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8 DUP4 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x261 DUP4 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E8 DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xEB62098235522B021B1120995F38825B19135D21CCE71007 0xCC 0xE0 0xBF 0xD2 0xD PUSH21 0xEA64736F6C63430008070033000000000000000000 ",
							"sourceMap": "60:781:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@odd_80": {
									"entryPoint": 213,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sum_36": {
									"entryPoint": 137,
									"id": 36,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2478:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "611:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:1",
														"type": ""
													}
												],
												"src": "839:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "964:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "974:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "997:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "979:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "974:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1008:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1031:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1013:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1008:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1171:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1173:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1092:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1099:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1167:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1089:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:81:1"
															},
															"nodeType": "YulIf",
															"src": "1086:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1203:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1214:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1217:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "951:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "954:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "960:3:1",
														"type": ""
													}
												],
												"src": "920:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1276:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1286:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1297:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1286:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1258:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1268:7:1",
														"type": ""
													}
												],
												"src": "1231:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1367:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1394:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1376:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1367:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1490:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1492:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1492:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1492:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1415:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1412:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:77:1"
															},
															"nodeType": "YulIf",
															"src": "1409:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1521:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1532:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1343:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1353:3:1",
														"type": ""
													}
												],
												"src": "1314:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1587:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1597:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1620:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1602:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1597:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1631:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1654:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1636:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1631:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1678:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1680:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1680:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1675:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:9:1"
															},
															"nodeType": "YulIf",
															"src": "1665:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1709:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1718:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1721:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1709:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1576:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1579:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1585:1:1",
														"type": ""
													}
												],
												"src": "1553:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1763:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1877:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1880:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1870:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1735:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1949:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1959:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1921:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2107:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2336:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2339:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2329:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2230:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2396:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2419:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2444:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2426:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2426:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2416:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:43:1"
															},
															"nodeType": "YulIf",
															"src": "2406:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2389:5:1",
														"type": ""
													}
												],
												"src": "2353:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063c12363a21461006b575b600080fd5b6100556004803603810190610050919061014b565b610089565b6040516100629190610187565b60405180910390f35b6100736100d5565b6040516100809190610187565b60405180910390f35b6000806000905060008390505b83600a6100a391906101a2565b8110156100cb5780826100b691906101a2565b915080806100c390610202565b915050610096565b5080915050919050565b600080600090506000805b600a81101561012d5760006002836100f8919061024b565b1461011a57818361010991906101a2565b9250808061011690610202565b9150505b818061012590610202565b9250506100e0565b82935050505090565b600081359050610145816102df565b92915050565b600060208284031215610161576101606102da565b5b600061016f84828501610136565b91505092915050565b610181816101f8565b82525050565b600060208201905061019c6000830184610178565b92915050565b60006101ad826101f8565b91506101b8836101f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101ed576101ec61027c565b5b828201905092915050565b6000819050919050565b600061020d826101f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102405761023f61027c565b5b600182019050919050565b6000610256826101f8565b9150610261836101f8565b925082610271576102706102ab565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102e8816101f8565b81146102f357600080fd5b5056fea264697066735822122077eb62098235522b021b1120995f38825b19135d21cce71007cce0bfd20d74ea64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC12363A2 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP4 PUSH1 0xA PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCB JUMPI DUP1 DUP3 PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xC3 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST EQ PUSH2 0x11A JUMPI DUP2 DUP4 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x116 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP2 DUP1 PUSH2 0x125 SWAP1 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP POP PUSH2 0xE0 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145 DUP2 PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0x2DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F DUP5 DUP3 DUP6 ADD PUSH2 0x136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x181 DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8 DUP4 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x261 DUP4 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E8 DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xEB62098235522B021B1120995F38825B19135D21CCE71007 0xCC 0xE0 0xBF 0xD2 0xD PUSH21 0xEA64736F6C63430008070033000000000000000000 ",
							"sourceMap": "60:781:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:363;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:237;232:4;248:12;263:1;248:16;;301:6;310:7;301:16;;296:91;329:7;324:2;:12;;;;:::i;:::-;319:1;:18;296:91;;;374:1;364:7;:11;;;;:::i;:::-;354:21;;339:3;;;;;:::i;:::-;;;;296:91;;;;406:7;399:14;;;184:237;;;:::o;475:363::-;511:4;526:12;541:1;526:16;;552:12;578:16;617:187;637:2;623:11;:16;617:187;;;676:1;671;661:7;:11;;;;:::i;:::-;:16;658:111;;716:7;706;:17;;;;:::i;:::-;696:27;;741:13;;;;;:::i;:::-;;;;658:111;784:9;;;;;:::i;:::-;;;;617:187;;;822:7;815:14;;;;;475:363;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:305::-;960:3;979:20;997:1;979:20;:::i;:::-;974:25;;1013:20;1031:1;1013:20;:::i;:::-;1008:25;;1167:1;1099:66;1095:74;1092:1;1089:81;1086:107;;;1173:18;;:::i;:::-;1086:107;1217:1;1214;1210:9;1203:16;;920:305;;;;:::o;1231:77::-;1268:7;1297:5;1286:16;;1231:77;;;:::o;1314:233::-;1353:3;1376:24;1394:5;1376:24;:::i;:::-;1367:33;;1422:66;1415:5;1412:77;1409:103;;;1492:18;;:::i;:::-;1409:103;1539:1;1532:5;1528:13;1521:20;;1314:233;;;:::o;1553:176::-;1585:1;1602:20;1620:1;1602:20;:::i;:::-;1597:25;;1636:20;1654:1;1636:20;:::i;:::-;1631:25;;1675:1;1665:35;;1680:18;;:::i;:::-;1665:35;1721:1;1718;1714:9;1709:14;;1553:176;;;;:::o;1735:180::-;1783:77;1780:1;1773:88;1880:4;1877:1;1870:15;1904:4;1901:1;1894:15;1921:180;1969:77;1966:1;1959:88;2066:4;2063:1;2056:15;2090:4;2087:1;2080:15;2230:117;2339:1;2336;2329:12;2353:122;2426:24;2444:5;2426:24;:::i;:::-;2419:5;2416:35;2406:63;;2465:1;2462;2455:12;2406:63;2353:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "162400",
								"executionCost": "208",
								"totalCost": "162608"
							},
							"external": {
								"odd()": "infinite",
								"sum(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 841,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077eb62098235522b021b1120995f38825b19135d21cce71007cce0bfd20d74ea64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "188B85B4"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "C12363A2"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 301,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 296,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 324,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 324,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 324,
											"end": 336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 324,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 296,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 364,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 364,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 339,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 339,
											"end": 342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 339,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 296,
											"end": 387,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 296,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 399,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 804,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 617,
											"end": 804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 623,
											"end": 634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 623,
											"end": 639,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 617,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 617,
											"end": 804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 676,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 661,
											"end": 677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 658,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 658,
											"end": 769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 716,
											"end": 723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 706,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 706,
											"end": 723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 706,
											"end": 723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 696,
											"end": 723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 741,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 741,
											"end": 754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 741,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 658,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 617,
											"end": 804,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 804,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 617,
											"end": 804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 815,
											"end": 829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 815,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 815,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 815,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 815,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 838,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 997,
											"end": 998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 974,
											"end": 999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1170,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1086,
											"end": 1193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1086,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1225,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1376,
											"end": 1400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1400,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1376,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1488,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1489,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1409,
											"end": 1512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1409,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1656,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 1915,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1735,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 1885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1909,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2101,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1921,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 2047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2353,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2426,
											"end": 2450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2450,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2426,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2451,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2406,
											"end": 2469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2406,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"odd()": "c12363a2",
							"sum(uint256)": "188b85b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"odd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/8_bucles_condicionales.sol\":\"loops_conditionals\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/8_bucles_condicionales.sol\":{\"keccak256\":\"0xf9948c39392135016d81266de999206c7659ec67bd1abbb5508e463215bc91c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d878dc63227fb0d0f0f4cf7d43c53343e8fe3ace1580c0bf5c439fdfe132a22\",\"dweb:/ipfs/QmdTL56H5wTpd8ZFmdrQHxMXAFftxx1pzLy9EKrbcTLRUp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/8_bucles_condicionales.sol": {
				"ast": {
					"absolutePath": "contracts/8_bucles_condicionales.sol",
					"exportedSymbols": {
						"loops_conditionals": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "loops_conditionals",
							"nameLocation": "69:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "237:184:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "aux_sum",
														"nameLocation": "253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 35,
														"src": "248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "30",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "263:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "248:16:0"
											},
											{
												"body": {
													"id": 31,
													"nodeType": "Block",
													"src": "343:44:0",
													"statements": [
														{
															"expression": {
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "aux_sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "354:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 26,
																		"name": "aux_sum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 27,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "374:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "364:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "354:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "354:21:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "324:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 18,
																	"name": "_number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "329:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "324:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 20,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "323:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "319:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 32,
												"initializationExpression": {
													"assignments": [
														13
													],
													"declarations": [
														{
															"constant": false,
															"id": 13,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "306:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 32,
															"src": "301:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 12,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "301:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 15,
													"initialValue": {
														"id": 14,
														"name": "_number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "301:16:0"
												},
												"loopExpression": {
													"expression": {
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "339:3:0",
														"subExpression": {
															"id": 22,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "339:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 24,
													"nodeType": "ExpressionStatement",
													"src": "339:3:0"
												},
												"nodeType": "ForStatement",
												"src": "296:91:0"
											},
											{
												"expression": {
													"id": 33,
													"name": "aux_sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 34,
												"nodeType": "Return",
												"src": "399:14:0"
											}
										]
									},
									"functionSelector": "188b85b4",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "193:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "196:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:6:0"
									},
									"scope": 81,
									"src": "184:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "516:322:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "aux_sum",
														"nameLocation": "531:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "526:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"hexValue": "30",
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "541:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "526:16:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "557:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "552:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"hexValue": "30",
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "567:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "552:16:0"
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "counter_odd",
														"nameLocation": "583:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "578:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"hexValue": "30",
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "597:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "578:20:0"
											},
											{
												"body": {
													"id": 75,
													"nodeType": "Block",
													"src": "640:164:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "counter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "661:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "671:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "661:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "661:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 71,
															"nodeType": "IfStatement",
															"src": "658:111:0",
															"trueBody": {
																"id": 70,
																"nodeType": "Block",
																"src": "678:91:0",
																"statements": [
																	{
																		"expression": {
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 61,
																				"name": "aux_sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "696:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 62,
																					"name": "aux_sum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "706:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 63,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "716:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "706:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "696:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 66,
																		"nodeType": "ExpressionStatement",
																		"src": "696:27:0"
																	},
																	{
																		"expression": {
																			"id": 68,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "741:13:0",
																			"subExpression": {
																				"id": 67,
																				"name": "counter_odd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "741:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 69,
																		"nodeType": "ExpressionStatement",
																		"src": "741:13:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "784:9:0",
																"subExpression": {
																	"id": 72,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "784:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "784:9:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "counter_odd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "623:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "637:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "623:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "WhileStatement",
												"src": "617:187:0"
											},
											{
												"expression": {
													"id": 77,
													"name": "aux_sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 78,
												"nodeType": "Return",
												"src": "815:14:0"
											}
										]
									},
									"functionSelector": "c12363a2",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "odd",
									"nameLocation": "484:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:6:0"
									},
									"scope": 81,
									"src": "475:363:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "60:781:0",
							"usedErrors": []
						}
					],
					"src": "33:808:0"
				},
				"id": 0
			}
		}
	}
}